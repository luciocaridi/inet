{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Lucio 29-10\\\\M\\xF3dulo MERN\\\\Trabajos\\\\Sprint 2\\\\client\\\\src\\\\components\\\\Cities.js\";\n\n/*import React from 'react';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport home from '../img/homeIcon.png';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\nimport { itemActions } from '../actions/itemActions'\r\nimport initialState from '../reducers/itemReducer'\r\n\r\n\r\n\r\nclass Cities extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state= {\r\n      cities: initialState,\r\n    };\r\n\r\n}\r\n\r\n/*componentDidMount() {\r\n  fetch('http://localhost:5000/cities/all')\r\n  .then(results => {\r\n    return results.json();\r\n  })\r\n    this.setState({cities: initialState});\r\n  }\r\n*/\n\n/* render() {\r\n   const items = this.props.itemdos;\r\n   return (\r\n       <div>\r\n       {\r\n         items.map((element)=>\r\n         {\r\n           console.log(\"ola\");\r\n           console.log(element);\r\n           return element.map((ciudad) =>\r\n           {\r\n             console.log(ciudad.country);\r\n           return <h4>{ciudad.country}</h4>\r\n           })\r\n         }\r\n       )\r\n       }\r\n       <footer className=\"Main-footer\">\r\n             <Link to=\"/\"><img src={home} className=\"Main-footer\" alt=\"Home\" /></Link>\r\n       </footer>\r\n       </div>\r\n     \r\n   )\r\n } \r\n}\r\n\nCities.propTypes = {\r\n getItems: PropTypes.func.isRequired,\r\n item: PropTypes.object.isRequired\r\n};\r\n\nconst mapStateToProps = (state) =>{\r\n console.log(state);\r\n \r\n  return {\r\n itemdos: state.item\r\n}};\r\n\nconst mapDispatchToProps = dispatch => ({\r\n actions: bindActionCreators(getItems, dispatch)\r\n // editarLista:(listaNueva) => { dispatch({type: 'GET_ITEMS', items: listaNueva})}\r\n})\r\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities); */\n\n/*         {this.state.cities}\r\n */\n\n/*           {items.map((city) => {\r\n           return(\r\n             <div key={city}>\r\n             <ul>\r\n               <li>{city.name}</li>\r\n             </ul>\r\n             </div>\r\n         )})} */\nimport React from 'react';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport home from '../img/homeIcon.png';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getItems } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\nimport { itemActions } from '../actions/itemActions';\nimport initialState from '../reducers/itemReducer';\n\nclass CitiesPages extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cities: initialState,\n      estado: true\n    };\n  }\n  /*\r\n  async componentDidMount(){\r\n    //const recibir = await \r\n    fetch('http://localhost:5000/Cities/all')\r\n    .then(results=>{\r\n      return results.json();\r\n    }).then(data=>{\r\n      let ciudades = data.map((cit)=>{\r\n        return(\r\n          <div key={cit._id}>\r\n          <h4>{cit.name}, {cit.country}</h4>\r\n        </div>\r\n        )\r\n    })\r\n    this.setState({ciudades: ciudades});\r\n  })\r\n  }*/\n  //https://blog.hellojs.org/fetching-api-data-with-react-js-460fe8bbf8f2\n\n\n  render() {\n    console.log(this.props.itemdos);\n    const items = this.props.itemdos;\n    return React.createElement(\"div\", {\n      className: \"mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Entrada exitosa City\"), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column mx-auto mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, items.map(element => {\n      console.log(\"ola\");\n      console.log(element);\n      return element.map(ciudad => {\n        console.log(ciudad.name);\n        return React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, ciudad.name);\n      });\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: home,\n      alt: \"f\",\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nCitiesPages.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(state.item);\n  return {\n    itemdos: state.item\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(getItems, dispatch) // editarLista:(listaNueva) => { dispatch({type: 'GET_ITEMS', items: listaNueva})}\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPages);","map":{"version":3,"sources":["C:/Users/me/Desktop/Lucio 29-10/MÃ³dulo MERN/Trabajos/Sprint 2/client/src/components/Cities.js"],"names":["React","Route","Link","BrowserRouter","Router","Switch","home","connect","bindActionCreators","getItems","PropTypes","itemActions","initialState","CitiesPages","Component","constructor","state","cities","estado","render","console","log","props","itemdos","items","map","element","ciudad","name","propTypes","func","isRequired","item","object","mapStateToProps","mapDispatchToProps","dispatch","actions"],"mappings":"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","sourcesContent":["/*import React from 'react';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport home from '../img/homeIcon.png';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { getItems } from '../actions/itemActions';\r\nimport PropTypes from 'prop-types';\r\nimport { itemActions } from '../actions/itemActions'\r\nimport initialState from '../reducers/itemReducer'\r\n\r\n\r\n\r\nclass Cities extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state= {\r\n      cities: initialState,\r\n    };\r\n\r\n}\r\n\r\n/*componentDidMount() {\r\n  fetch('http://localhost:5000/cities/all')\r\n  .then(results => {\r\n    return results.json();\r\n  })\r\n    this.setState({cities: initialState});\r\n  }\r\n*/\r\n\r\n\r\n /* render() {\r\n    const items = this.props.itemdos;\r\n    return (\r\n        <div>\r\n        {\r\n          items.map((element)=>\r\n          {\r\n            console.log(\"ola\");\r\n            console.log(element);\r\n            return element.map((ciudad) =>\r\n            {\r\n              console.log(ciudad.country);\r\n            return <h4>{ciudad.country}</h4>\r\n            })\r\n          }\r\n        )\r\n        }\r\n        <footer className=\"Main-footer\">\r\n              <Link to=\"/\"><img src={home} className=\"Main-footer\" alt=\"Home\" /></Link>\r\n        </footer>\r\n        </div>\r\n      \r\n    )\r\n  } \r\n}\r\n\r\nCities.propTypes = {\r\n  getItems: PropTypes.func.isRequired,\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n  console.log(state);\r\n  \r\n   return {\r\n  itemdos: state.item\r\n}};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(getItems, dispatch)\r\n  // editarLista:(listaNueva) => { dispatch({type: 'GET_ITEMS', items: listaNueva})}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities); */\r\n\r\n/*         {this.state.cities}\r\n */\r\n\r\n\r\n /*           {items.map((city) => {\r\n            return(\r\n              <div key={city}>\r\n              <ul>\r\n                <li>{city.name}</li>\r\n              </ul>\r\n              </div>\r\n          )})} */ \r\n\r\n          import React from 'react';\r\n          import { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n          import home from '../img/homeIcon.png';\r\n          import { connect } from 'react-redux';\r\n          import { bindActionCreators } from 'redux';\r\n          import { getItems } from '../actions/itemActions';\r\n          import PropTypes from 'prop-types';\r\n          import { itemActions } from '../actions/itemActions'\r\n          import initialState from '../reducers/itemReducer'\r\n          class CitiesPages extends React.Component {\r\n            constructor() {\r\n              super();\r\n              this.state= {\r\n                cities: initialState,\r\n                estado: true,\r\n              };\r\n            }\r\n            /*\r\n            async componentDidMount(){\r\n              //const recibir = await \r\n              fetch('http://localhost:5000/Cities/all')\r\n              .then(results=>{\r\n                return results.json();\r\n              }).then(data=>{\r\n                let ciudades = data.map((cit)=>{\r\n                  return(\r\n                    <div key={cit._id}>\r\n                    <h4>{cit.name}, {cit.country}</h4>\r\n                  </div>\r\n                  )\r\n              })\r\n              this.setState({ciudades: ciudades});\r\n            })\r\n            }*/\r\n            //https://blog.hellojs.org/fetching-api-data-with-react-js-460fe8bbf8f2\r\n            render() {\r\n              console.log(this.props.itemdos);\r\n              \r\n              const items = this.props.itemdos;\r\n              return (\r\n                <div className=\"mb-2\">\r\n                  <p>Entrada exitosa City</p>\r\n                  <footer>\r\n                    <div className=\"row\">\r\n                    \r\n                      <div className=\"column mx-auto mt-4\">\r\n                      {\r\n                        items.map((element)=> \r\n                        { \r\n                          console.log(\"ola\");\r\n                          \r\n                          console.log(element);\r\n                          return element.map((ciudad) =>\r\n                          {\r\n                            console.log(ciudad.name);\r\n                          return <h4>{ciudad.name}</h4>\r\n                          })\r\n                        }\r\n                      )\r\n                      }\r\n                        <Link to=\"/\">\r\n                          <img src={home} alt=\"f\" className=\"home\" />\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </footer>\r\n                </div>\r\n              )\r\n            }\r\n          }\r\n          CitiesPages.propTypes = {\r\n            getItems: PropTypes.func.isRequired,\r\n            item: PropTypes.object.isRequired\r\n          };\r\n          const mapStateToProps = (state) =>{ \r\n              console.log(state.item);\r\n              return {\r\n            itemdos: state.item\r\n          }};\r\n          const mapDispatchToProps = dispatch => ({\r\n            actions: bindActionCreators(getItems, dispatch)\r\n            // editarLista:(listaNueva) => { dispatch({type: 'GET_ITEMS', items: listaNueva})}\r\n          })\r\n          export default connect(mapStateToProps, mapDispatchToProps)(CitiesPages);       \r\n"]},"metadata":{},"sourceType":"module"}