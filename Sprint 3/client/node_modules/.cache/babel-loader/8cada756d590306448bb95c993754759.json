{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Lucio 19-11\\\\MERN\\\\Sprint 3\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React from 'react';\nimport home from '../img/homeIcon.png';\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { SetItemsFetch } from '../actions/itemAction';\n\nclass CitiesPages extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterCities = e => {\n      console.log();\n      var items = this.props.citiesRedux;\n      items = items.filter(item => {\n        var ciudad = item.name.toLowerCase() + item.country.toLowerCase();\n        return ciudad.indexOf(e.target.value.toLowerCase()) !== -1;\n      });\n      this.setState({\n        cities: items\n      });\n    };\n\n    this.state = {\n      cities: [],\n      search: ''\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.actionsgetItems();\n    this.setState({\n      cities: this.props.citiesRedux\n    });\n  }\n\n  render() {\n    const items = this.props.itemdos.filter(item => {\n      var ciudad = item.name.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1 || item.country.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1;\n      return ciudad;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.search,\n      onChange: this.updateSearch.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), items.map(ciudad => {\n      return React.createElement(Link, {\n        to: \"/itinerary/\".concat(ciudad.name),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        key: ciudad._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, ciudad.name, \" - \", ciudad.country));\n    }), React.createElement(\"footer\", {\n      className: \"Main-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: home,\n      className: \"Main-footer\",\n      alt: \"Home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log('mapStateToProps', state);\n  return {\n    citiesRedux: state.reducerCity.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actionsgetItems: () => dispatch(SetItemsFetch())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPages);","map":{"version":3,"sources":["C:/Users/me/Desktop/Lucio 19-11/MERN/Sprint 3/client/src/components/Cities.js"],"names":["React","home","Route","Link","BrowserRouter","Router","Switch","PropTypes","connect","SetItemsFetch","CitiesPages","Component","constructor","props","filterCities","e","console","log","items","citiesRedux","filter","item","ciudad","name","toLowerCase","country","indexOf","target","value","setState","cities","state","search","componentDidMount","actionsgetItems","render","itemdos","updateSearch","bind","map","_id","mapStateToProps","reducerCity","data","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport home from '../img/homeIcon.png'\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {SetItemsFetch}  from '../actions/itemAction';\r\n\r\nclass CitiesPages extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cities: [],\r\n      search: ''\r\n    };\r\n  }\r\n  async componentDidMount(){\r\n    await this.props.actionsgetItems()\r\n    this.setState({cities:this.props.citiesRedux})\r\n    \r\n  }\r\n\r\n  filterCities = (e) => {\r\n    console.log();\r\n    var items = this.props.citiesRedux\r\n    items=items.filter((item)=>{\r\n      var ciudad= item.name.toLowerCase() + item.country.toLowerCase()\r\n      return ciudad.indexOf(\r\n        e.target.value.toLowerCase()) !== -1 \r\n    })\r\n    this.setState({cities:items})\r\n  }\r\n\r\n  render() {\r\n    const items = this.props.itemdos.filter(\r\n      (item) => {\r\n        var ciudad = item.name.toLowerCase().indexOf(\r\n          this.state.search.toLowerCase()) !== -1 || item.country.toLowerCase().indexOf(\r\n          this.state.search.toLowerCase()) !== -1; \r\n        return ciudad\r\n      }\r\n    );\r\n    return (\r\n        <div>\r\n        <input type=\"text\" value={this.state.search} onChange={this.updateSearch.bind(this)} />\r\n        {items.map((ciudad)=> { \r\n          return <Link to={`/itinerary/${ciudad.name}`}><h4 key={ciudad._id}>{ciudad.name} - {ciudad.country}</h4></Link>\r\n        })}\r\n        <footer className=\"Main-footer\">\r\n              <Link to=\"/\"><img src={home} className=\"Main-footer\" alt=\"Home\" /></Link>\r\n        </footer>\r\n        </div>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('mapStateToProps', state);\r\n  \r\n  return {\r\n    citiesRedux: state.reducerCity.data\r\n  }\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  actionsgetItems:() => dispatch(SetItemsFetch())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps )(CitiesPages);"]},"metadata":{},"sourceType":"module"}